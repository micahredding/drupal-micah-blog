<?php 

function mr_format_filter_info() {
  $filters['filter_micahmarkdown'] = array(
    'title' => t('Micah Markdown'),
    'description' => t('Adds a few tweaks to Markdown, including the ability to add classes and IDs. Intended to be used AFTER Markdown processing.'),
    'process callback' => '_filter_micahmarkdown',
    'tips callback'  => '_filter_micahmarkdown_tips'
  );
  return $filters;
}

/**
 * Filter process callback.
 */
function _filter_micahmarkdown($text, $format) {
  if (!empty($text)) {
    $text = micahmarkdown($text);
  }
  return $text;
}


function _filter_micahmarkdown_tips($format, $long = FALSE) {
    return t('Micah\'s Additions:<ul>
      <li>Add classes in {} after links and images</li>
      </ul>');
}


function micahmarkdown($text) {
// algorithm adapted from here
// http://egilhansen.com/2011/03/09/drupal-extending-markdown-syntax-add-css-classes-images  
  
  $text = preg_replace('/(<img.*)\/>\{([A-Za-z0-9-_\s]*)\}/', '${1}class="${2}" />', $text);
  $text = preg_replace('/(<a.*)\>(.*)<\/a>{([A-Za-z0-9-_\s]*)\}/', '${1} class="${3}">${2}</a>', $text);
  $text = preg_replace('/\[(.*)\]{([A-Za-z0-9-_\s]*)}/', '<span class="${2}">${1}</span>', $text);
  
  return $text;
}